# We have some multithreaded tests, so let's activate threading support.
include(YACMAThreadingSetup)

list(APPEND MPPP_CXX_FLAGS_DEBUG ${YACMA_THREADING_CXX_FLAGS})
list(APPEND MPPP_CXX_FLAGS_RELEASE ${YACMA_THREADING_CXX_FLAGS})

function(ADD_MPPP_TESTCASE arg1)
    add_executable(${arg1} ${arg1}.cpp)
    target_link_libraries(${arg1} mp++ Threads::Threads)
    target_compile_options(${arg1} PRIVATE "$<$<CONFIG:DEBUG>:${MPPP_CXX_FLAGS_DEBUG}>" "$<$<CONFIG:RELEASE>:${MPPP_CXX_FLAGS_RELEASE}>")
    if(YACMA_COMPILER_IS_MSVC AND MPPP_MSVC_STATIC_RUNTIME)
      target_compile_options(${arg1} PRIVATE "$<$<CONFIG:DEBUG>:-MTd>" "$<$<CONFIG:RELEASE>:-MT>")
    endif()
    set_property(TARGET ${arg1} PROPERTY CXX_STANDARD 11)
    set_property(TARGET ${arg1} PROPERTY CXX_STANDARD_REQUIRED YES)
    set_property(TARGET ${arg1} PROPERTY CXX_EXTENSIONS NO)
    add_test(${arg1} ${arg1})
endfunction()

ADD_MPPP_TESTCASE(test_abs)
ADD_MPPP_TESTCASE(test_add_ui)
ADD_MPPP_TESTCASE(test_arith)
ADD_MPPP_TESTCASE(test_arith_ops)
ADD_MPPP_TESTCASE(test_basic)
ADD_MPPP_TESTCASE(test_bin)
ADD_MPPP_TESTCASE(test_custom_namespace)
ADD_MPPP_TESTCASE(test_divexact)
ADD_MPPP_TESTCASE(test_even_odd)
ADD_MPPP_TESTCASE(test_fac)
ADD_MPPP_TESTCASE(test_gcd)
ADD_MPPP_TESTCASE(test_get_mpz_t)
ADD_MPPP_TESTCASE(test_hash)
ADD_MPPP_TESTCASE(test_is_zero_one)
ADD_MPPP_TESTCASE(test_neg)
ADD_MPPP_TESTCASE(test_nextprime)
ADD_MPPP_TESTCASE(test_pow)
ADD_MPPP_TESTCASE(test_probab_prime_p)
ADD_MPPP_TESTCASE(test_rel)
ADD_MPPP_TESTCASE(test_sqrt)
ADD_MPPP_TESTCASE(test_view)
